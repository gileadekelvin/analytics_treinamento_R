position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_cartesian(xlim = c(13, 90)) +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_cartesian(xlim = c(13, 90)) +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_cartesian(xlim = c(13, 90)) +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1))
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_cartesian(xlim = c(13, 90)) +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1), ...)
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_cartesian(xlim = c(13, 90)) +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1))
ggplot(aes(x = age, y = friend_count), data = pf) +
x_lim(13, 90)
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange')
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1))
ggplot(aes(x = age, y = friend_count), data = pf) +
x_lim(13, 90)
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1))
ggplot(aes(x = age, y = friend_count), data = pf) +
x_lim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1))
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1))
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 3, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 4, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 5, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
View(pf.fc_by_age)
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue') +
coord_cartesian(xlim = c(13, 30))
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue') +
coord_cartesian(xlim = c(65, 75))
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue') +
coord_cartesian(xlim = c(65, 75))
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
?core.tests
?core.test
??core.test
# Chunk 1
#install.packages("dplyr")
#install.packages("tidyr")
setwd('~/analytics_treinamento_R/problem_set_one_variable')
getwd()
# Chunk 2
library(ggplot2)
data(diamonds)
# Chunk 3
summary(diamonds)
dim(diamonds)
str(diamonds)
summary(diamonds$color)
# Chunk 4
ggplot(aes(x = price), data = diamonds) +
geom_histogram(color = I('black'), fill = I('#009688')) +
ylab('Number of diamonds') +
xlab('Price')
summary(diamonds$price)
mean(diamonds$price)
median(diamonds$price)
# Chunk 5
sum(diamonds$price < 500)
# Chunk 6
sum(diamonds$price < 250)
# Chunk 7
sum(diamonds$price >= 15000)
# Chunk 8
ggplot(aes(x = price), data = diamonds) +
geom_histogram(color = I('black'), fill = I('#009688'), binwidth = 40) +
scale_x_continuous(limits = c(200, 1500), breaks = seq(0, 1600, 200)) +
ggsave('priceHistogram.png')
# Chunk 9
ggplot(aes(x = price), data = subset(diamonds, !is.na(cut))) +
geom_histogram(aes(fill = cut)) +
facet_wrap(~cut, scales = 'free_y') +
ylab('Number of Diamonds')
# Chunk 10
by(diamonds$price, diamonds$cut, median)
# Chunk 11
qplot(x = price, data = diamonds) + facet_wrap(~cut, scales = 'free_y')
# Chunk 12
ggplot(aes(x = price/carat), data = diamonds) +
geom_histogram(binwidth = .1, aes(color = I('black'))) +
xlab('Price per Carat') +
scale_x_log10() +
facet_wrap(~cut, scales = 'free_y')
# Chunk 13
summary(diamonds$price)
by(diamonds$price, diamonds$cut, summary)
ggplot(aes(x = cut, y = price), data = diamonds) +
geom_boxplot()
# Chunk 14
ggplot(aes(x = cut, y = price), data = diamonds) +
geom_boxplot() +
coord_cartesian(ylim = c(0, 7000)) +
scale_y_continuous(breaks = seq(0, 7000, 1000))
# Chunk 15
# Obtendo primeiro e terceiro quartis
summary(subset(diamonds, color == 'D')$price)
summary(subset(diamonds, color == 'J')$price)
#obtendo a dist√¢ncia interquartil
IQR(subset(diamonds, color == 'D')$price)
IQR(subset(diamonds, color == 'J')$price)
# Chunk 16
ggplot(aes(x = color, y = price/carat), data = diamonds) +
geom_boxplot()
# Chunk 17
ggplot(aes(x = color, y = price/carat), data = diamonds) +
geom_boxplot() +
coord_cartesian(ylim = c(0, 6000)) +
scale_y_continuous(breaks = seq(0, 6000, 500))
# Chunk 18
ggplot(aes(x = carat), data = diamonds) +
geom_freqpoly(binwidth = .025) +
scale_x_continuous(limits = c(0, 3), breaks = seq(0, 3, 0.1))
# Chunk 19
data_female_age <- read.csv('indicator_Female_20-39.csv', check.names = F)
data_male_age <- read.csv('indicator_Male_20-39.csv', check.names = F)
# Chunk 20
library(gridExtra)
library(grid)
plot_1950_female <- ggplot(aes(x = data_female_age$`1950`), data = data_female_age) +
geom_histogram(color = I('#0D47A1'), fill = I('#2196F3')) +
scale_x_continuous(limits = c(20, 40), breaks = seq(20, 40, 2)) +
scale_y_continuous(limits = c(0, 36), breaks = seq(0, 36, 5)) +
xlab('Female age 20-39 (%)') +
ylab('Number of Countries in 1950')
plot_2015_female <- ggplot(aes(x = data_female_age$`2015`), data = data_female_age) +
geom_histogram(color = I('#0D47A1'), fill = I('#1565C0')) +
scale_x_continuous(limits = c(20, 50), breaks = seq(20, 50, 2)) +
scale_y_continuous(limits = c(0, 36), breaks = seq(0, 36, 5)) +
xlab('Female age 20-39 (%)') +
ylab('Number of Countries in 2015')
grid.arrange(plot_1950_female, plot_2015_female, ncol=2)
#Mean
mean(data_female_age$`1950`)
mean(data_female_age$`2015`)
# Chunk 21
summary(data_female_age$`1950`)
summary(data_female_age$`2015`)
# Chunk 22
# A frequ√™ncia(de mulheres entre 20-39 anos na popula√ß√£o mundial) mundial em 1950
mean(subset(data_female_age, data_female_age$`Female 20-39 years (%)` == 'Brazil')$`1950`)
# A m√©dia mundial para o ano de 1950
mean(data_female_age$`1950`)
#Brasil em 2015
mean(subset(data_female_age, data_female_age$`Female 20-39 years (%)` == 'Brazil')$`2015`)
# A m√©dia mundial para o ano de 1950
mean(data_female_age$`2015`)
# Chunk 23
summary(data_male_age$`1950`)
summary(data_male_age$`2015`)
plot_1950_male <- ggplot(aes(x = data_male_age$`1950`), data = data_male_age) +
geom_histogram(color = I('#FF6F00'), fill = I('#FFC107')) +
scale_x_continuous(limits = c(20, 55), breaks = seq(20, 55, 2)) +
scale_y_continuous(limits = c(0, 45), breaks = seq(0, 45, 5)) +
xlab('Male age 20-39 (%)') +
ylab('Number of Countries in 1950')
plot_2015_male <- ggplot(aes(x = data_male_age$`2015`), data = data_male_age) +
geom_histogram(color = I('#FF6F00'), fill = I('#FF8F00')) +
scale_x_continuous(limits = c(20, 50), breaks = seq(20, 55, 2)) +
scale_y_continuous(limits = c(0, 45), breaks = seq(0, 45, 5)) +
xlab('Male age 20-39 (%)') +
ylab('Number of Countries in 2015')
grid.arrange(plot_1950_male, plot_2015_male, ncol=2)
# Chunk 24
grid.arrange(plot_1950_male, plot_2015_male, plot_1950_female, plot_2015_female, ncol=2)
# Chunk 25
#1950
mean(data_female_age$`1950`)
mean(data_male_age$`1950`)
#2015
mean(data_female_age$`2015`)
mean(data_male_age$`2015`)
# Chunk 26
friends_birthday <- read.csv("birthdaysExample.csv", check.names = F)
friends_birthday$dates <- as.character(as.factor(friends_birthday$dates))
friends_birthday$dates <- as.Date(friends_birthday$dates,
format = "%m/%d/%y")
# Chunk 27
library(dplyr)
library(tidyr)
date <- separate(friends_birthday, dates, c("year", "month", "day"), sep = "-")
date$year <- as.numeric(as.character(date$year))
date$month <- as.numeric(as.character(date$month))
date$day <- as.numeric(as.character(date$day))
# Chunk 28
count(subset(date, date$month == 6 & date$day == 19))
# Chunk 29
max(summary(as.factor(date$month)))
summary(as.factor(date$month))[3]
# Mar√ßo √© o m√™s com maior n√∫mero de anivers√°rios
# Chunk 30
summary(as.factor(date$month))
month_birthdays <- data.frame(summary(as.factor(date$month)))
month_birthdays$months <- (seq(1, 12, 1))
names(month_birthdays)[1] <- "number_of_birthdays"
names(month_birthdays)[2] <- "months"
month_birthdays$months <- as.factor(month_birthdays$months)
ggplot(data=month_birthdays, aes(x=months, y=number_of_birthdays)) + geom_bar(stat="identity", color = I('#004D40'), fill = I('#009688')) +
ylab('Number of birthdays')
# Chunk 31
date_month_day <- unite(date, "month_day", month, day, sep = "-")
date_month_day$month <- as.factor(date$month)
summary(as.factor(date_month_day$month_day))[1:5]
# 2-6-2014, 5-22-14 e 7-16-14 s√£o as datas com maior n√∫mero de anivers√°rios
# O histograma a seguir mostra os picos nas datas citadas anteriormente, em cada uma delas 8 amigos fazem aniversario
ggplot(aes(x = day), data = date) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = seq(1, 31, 2)) +
ylab('Number of birthdays') +
xlab('Days of the month') +
facet_wrap(~as.factor(month)) +
ggsave('BirthdaysByMonthHistogram.png')
# Chunk 32
friends_birthday$dates <- as.factor(friends_birthday$dates)
str(friends_birthday)
summary(as.factor(date$month))
month_birthdays <- data.frame(summary(as.factor(date$month)))
month_birthdays$months <- (seq(1, 12, 1))
names(month_birthdays)[1] <- "number_of_birthdays"
names(month_birthdays)[2] <- "months"
month_birthdays$months <- as.factor(month_birthdays$months)
ggplot(data=month_birthdays, aes(x=months, y=number_of_birthdays)) + geom_bar(stat="identity", color = I('#004D40'), fill = I('#009688')) +
ylab('Number of birthdays')
date_month_day <- unite(date, "month_day", month, day, sep = "-")
date_month_day$month <- as.factor(date$month)
summary(as.factor(date_month_day$month_day))[1:5]
# 2-6-2014, 5-22-14 e 7-16-14 s√£o as datas com maior n√∫mero de anivers√°rios
# O histograma a seguir mostra os picos nas datas citadas anteriormente, em cada uma delas 8 amigos fazem aniversario
ggplot(aes(x = day), data = date) +
geom_histogram(binwidth = 1) +
scale_x_continuous(breaks = seq(1, 31, 2)) +
ylab('Number of birthdays') +
xlab('Days of the month') +
facet_wrap(~as.factor(month)) +
ggsave('BirthdaysByMonthHistogram.png')
# Chunk 1
setwd('~/analytics_treinamento_R/explore_two_variables')
getwd()
# Chunk 2: Scatterplots
library(ggplot2)
pf <- read.csv('pseudo_facebook.tsv', sep = '\t')
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point()
# Chunk 3: ggplot Syntax
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point() + xlim(13, 90)
summary(pf$age)
# Chunk 4: Overplotting
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20) +
xlim(13, 90)
# Chunk 5: Coord_trans()
?coord_trans
# Chunk 6
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_point(alpha = 1/20) +
xlim(13, 90) +
coord_trans(y = "sqrt")
ggplot(aes(x = age, y = friend_count), data = pf) +
geom_jitter(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = "sqrt")
# Chunk 7: Alpha and Jitter
ggplot(aes(x = age, y = friendships_initiated), data = pf) +
geom_jitter(alpha = 1/20, position = position_jitter(h = 0)) +
xlim(13, 90) +
coord_trans(y = 'sqrt')
# Chunk 8: Conditional Means
library(dplyr)
age_groups <- group_by(pf, age)
pf.fc_by_age <- summarise(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(as.numeric(friend_count)),
n = n())
head(pf.fc_by_age)
# Chunk 9
pf.fc_by_age_2 <- pf %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(as.numeric(friend_count)),
n = n()) %>%
arrange(age)
head(pf.fc_by_age_2)
# Chunk 10: Conditional Means Plot
ggplot(aes(x = age, y = friend_count_mean), data = pf.fc_by_age) +
geom_line() +
scale_x_continuous(breaks = seq(13, 113, 5))
# Chunk 11: Overlaying Summaries with Raw Data
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
# Chunk 12: Correlation
# Chunk 13: Correlation on Subsets
with(                 , cor.test(age, friend_count))
# Chunk 14
# Chunk 15: Strong Correlations
# Chunk 16: Correlation Calcuation
# Chunk 17: More Caution With Correlation
install.packages('alr3')
library(alr3)
# Chunk 18: Temp vs Month
# Chunk 19: Noisy Scatterplots
# Chunk 20: Making Sense of Data
# Chunk 21: Understanding Noise: Age to Age Months
# Chunk 22: Age with Months Means
# Chunk 23: Programming Assignment
# Chunk 24: Noise in Conditional Means
# Chunk 25: Smoothing Conditional Means
ggplot(aes(x = age, y = friend_count), data = pf) +
xlim(13, 90) +
geom_point(alpha = 0.05,
position = position_jitter(h = 0),
color = 'orange') +
coord_trans(y = 'sqrt') +
geom_line(stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .1),
linetype = 2, color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .5),
color = 'blue') +
geom_line(stat = 'summary', fun.y = quantile, fun.args = list(probs = .9),
linetype = 2, color = 'blue')
r <- cor(pf$age, pf$friend_count)
cor.test(pf$age, pf$friend_count, method = 'pearson')
with(pf, cor.test(age, friend_count, method = 'pearson'))
with(subset(pf, pf$age <= 70), cor.test(age, friend_count))
with(subset(pf, age <= 70), cor.test(age, friend_count))
